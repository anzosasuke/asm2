
_init
ENDBR64
SUB RSP,0x8
MOV RAX,qword ptr [0x00103fe8]
TEST RAX,RAX
JZ 0x00101016
CALL RAX
ADD RSP,0x8
RET

_start
ENDBR64
XOR EBP,EBP
MOV R9,RDX
POP RSI
MOV RDX,RSP
AND RSP,-0x10
PUSH RAX
PUSH RSP
XOR R8D,R8D
XOR ECX,ECX
LEA RDI,[0x101178]
CALL qword ptr [0x00103fd8]
HLT

deregister_tm_clones
LEA RDI,[0x104010]
LEA RAX,[0x104010]
CMP RAX,RDI
JZ 0x001010b8
MOV RAX,qword ptr [0x00103fe0]
TEST RAX,RAX
JZ 0x001010b8
JMP RAX
RET

register_tm_clones
LEA RDI,[0x104010]
LEA RSI,[0x104010]
SUB RSI,RDI
MOV RAX,RSI
SHR RSI,0x3f
SAR RAX,0x3
ADD RSI,RAX
SAR RSI,0x1
JZ 0x001010f8
MOV RAX,qword ptr [0x00103ff0]
TEST RAX,RAX
JZ 0x001010f8
JMP RAX
RET

__do_global_dtors_aux
ENDBR64
CMP byte ptr [0x00104010],0x0
JNZ 0x00101138
PUSH RBP
CMP qword ptr [0x00103ff8],0x0
MOV RBP,RSP
JZ 0x00101127
MOV RDI,qword ptr [0x00104008]
CALL 0x00101040
CALL 0x00101090
MOV byte ptr [0x00104010],0x1
POP RBP
RET
RET

factorial
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV dword ptr [RBP + -0x4],EDI
CMP dword ptr [RBP + -0x4],0x0
JNZ 0x00101165
MOV EAX,0x1
JMP 0x00101176
MOV EAX,dword ptr [RBP + -0x4]
SUB EAX,0x1
MOV EDI,EAX
CALL 0x00101149
IMUL EAX,dword ptr [RBP + -0x4]
LEAVE
RET

main
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV dword ptr [RBP + -0x4],0x5
MOV EAX,dword ptr [RBP + -0x4]
MOV EDI,EAX
CALL 0x00101149
MOV EDX,EAX
MOV EAX,dword ptr [RBP + -0x4]
MOV ESI,EAX
LEA RAX,[0x102004]
MOV RDI,RAX
MOV EAX,0x0
CALL 0x00101050
MOV EAX,0x0
LEAVE
RET
